{"version":3,"file":"interaction-areas.light.min.js","mappings":"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","sources":["webpack://cloudinary-video-player/./components/themeButton/themedButton.js","webpack://cloudinary-video-player/./components/themeButton/themedButton.const.js","webpack://cloudinary-video-player/./plugins/interaction-areas/interaction-areas.utils.js","webpack://cloudinary-video-player/./plugins/interaction-areas/interaction-areas.service.js","webpack://cloudinary-video-player/./utils/throttle.js"],"sourcesContent":["import { elementsCreator } from '../../utils/dom';\n\n\nexport const themedButton = ({ text, onClick, theme = '', loadingDelay = 0 }) => {\n  return elementsCreator({\n    tag: 'button',\n    attr: { class: `vp-theme-button theme-${theme}` },\n    onClick,\n    children: [\n      {\n        tag: 'div',\n        attr: { class: 'vp-loading-bar' },\n        style: {\n          'animation-duration': `${loadingDelay}ms`\n        }\n      },\n      {\n        tag: 'div',\n        attr: { class: 'content' },\n        children: text\n      }\n    ]\n  });\n};\n\n","export const BUTTON_THEME = {\n  TRANSPARENT_WHITE: 'transparent-white'\n};\n","import { elementsCreator, styleElement } from '../../utils/dom';\nimport { get } from '../../utils/object';\nimport {\n  CLOSE_INTERACTION_AREA_LAYOUT_DELAY,\n  INTERACTION_AREA_HAND_ICON,\n  INTERACTION_AREA_LAYOUT_LOCAL_STORAGE_NAME,\n  INTERACTION_AREAS_CONTAINER_CLASS_NAME,\n  INTERACTION_AREAS_PREFIX,\n  INTERACTION_AREAS_THEME\n} from './interaction-areas.const';\nimport { noop } from '../../utils/type-inference';\nimport { getDefaultPlayerColor } from '../colors';\nimport { forEach, some } from '../../utils/array';\nimport { themedButton } from '../../components/themeButton/themedButton';\nimport { BUTTON_THEME } from '../../components/themeButton/themedButton.const';\n\n\nconst getInteractionAreaItemId = (item, index) => item.id || item.type || `id_${index}`;\n\nexport const getInteractionAreaItem = ({ playerOptions, videojsOptions }, item, index, durationTime, onClick) => {\n  const defaultColor = getDefaultPlayerColor(videojsOptions);\n  const accentColor = playerOptions && playerOptions.colors ? playerOptions.colors.accent : defaultColor.accent;\n\n  // theme = 'pulsing' / 'shadowed'\n  const theme = get(videojsOptions, 'interactionDisplay.theme.template', INTERACTION_AREAS_THEME.PULSING);\n\n  return elementsCreator({\n    tag: 'div',\n    attr: { class: `${INTERACTION_AREAS_PREFIX}-item theme-${theme}`, 'data-id': getInteractionAreaItemId(item, index) },\n    style: {\n      left: `${item.left}%`,\n      top: `${item.top}%`,\n      width: `${item.width}%`,\n      height: `${item.height}%`,\n      transitionDuration: `${durationTime}ms`\n    },\n    event: {\n      name: 'click',\n      callback: onClick\n    },\n    children: [\n      {\n        tag: 'div',\n        attr: { class: `${INTERACTION_AREAS_PREFIX}-area-marker` },\n        children: [\n          {\n            tag: 'div',\n            attr: { class: `${INTERACTION_AREAS_PREFIX}-marker-shadow` },\n            style: { [theme === INTERACTION_AREAS_THEME.SHADOWED ? 'backgroundColor' : 'borderColor']: accentColor }\n          },\n          {\n            tag: 'div',\n            attr: { class: `${INTERACTION_AREAS_PREFIX}-marker-main` },\n            style: { borderColor: accentColor }\n          }\n        ]\n      }\n    ]\n  });\n};\n\n\nexport const percentageToFixedValue = (outOf, value) => (outOf / (100 / +value));\n\nexport const getZoomTransformation = (videoElement, interactionAreaItem) => {\n\n  const { videoHeight, videoWidth } = videoElement;\n\n  const itemX = percentageToFixedValue(videoWidth, interactionAreaItem.left);\n  const itemY = percentageToFixedValue(videoHeight, interactionAreaItem.top);\n  const itemWidth = percentageToFixedValue(videoWidth, interactionAreaItem.width);\n  const itemHeight = percentageToFixedValue(videoHeight, interactionAreaItem.height);\n\n  const videoAspectRatio = videoWidth / videoHeight;\n  const itemAspectRatio = itemWidth / itemHeight;\n\n  const width = Math.round(itemAspectRatio > 1 || videoAspectRatio > 1 ? itemHeight * itemAspectRatio : itemWidth);\n  const height = Math.round(width / videoAspectRatio);\n\n  const x = Math.round(itemX - (width - itemWidth) / 2);\n  const y = Math.round(itemY - (height - itemHeight) / 2);\n\n  return {\n    width,\n    height,\n    x: Math.min(Math.max(x, 0), videoWidth - width),\n    y: Math.min(Math.max(y, 0), videoHeight - height),\n    crop: 'crop'\n  };\n};\n\n\nexport const setInteractionAreasContainer = (videojs, newInteractionAreasContainer) => {\n  const currentInteractionAreasContainer = getInteractionAreasContainer(videojs);\n\n  if (currentInteractionAreasContainer) {\n    currentInteractionAreasContainer.replaceWith(newInteractionAreasContainer);\n  } else {\n    // do not use element.append for ie11 support\n    videojs.el().appendChild(newInteractionAreasContainer);\n  }\n};\n\nconst getInteractionAreaElementById = (interactionAreasContainer, item, index) => interactionAreasContainer.querySelector(`[data-id=${getInteractionAreaItemId(item, index)}]`);\n\n\nexport const updateInteractionAreasItem = (videojs, configs, interactionAreasData, previousInteractionAreasData, durationTime, onClick) => {\n  const interactionAreasContainer = getInteractionAreasContainer(videojs);\n\n  forEach(interactionAreasData, (item, index) => {\n    const itemElement = getInteractionAreaElementById(interactionAreasContainer, item, index);\n    const itemId = getInteractionAreaItemId(item);\n    const isExistItem = some(previousInteractionAreasData, i => getInteractionAreaItemId(i) === itemId);\n\n    // in case the element of the item is in the dom and exist in the previous data , it update the element position\n    if (isExistItem && itemElement) {\n      styleElement(itemElement, {\n        left: `${item.left}%`,\n        top: `${item.top}%`,\n        width: `${item.width}%`,\n        height: `${item.height}%`,\n        transitionDuration: `${durationTime}ms`\n      });\n      // if the element did not exist before , not in the dom and not in the previous data , it add a new element\n    } else if (!isExistItem && !itemElement) {\n      // do not use element.append for ie11 support\n      interactionAreasContainer.appendChild(getInteractionAreaItem(configs, item, index, durationTime, (event) => {\n        onClick({ event, item, index });\n      }));\n    }\n  });\n\n  // checking the previous data for element that should be removed if not exist in the new data object.\n  forEach(previousInteractionAreasData, (item, index) => {\n    const itemElement = getInteractionAreaElementById(interactionAreasContainer, item, index);\n    const itemId = getInteractionAreaItemId(item);\n    const shouldBeRemoved = !some(interactionAreasData, i => getInteractionAreaItemId(i) === itemId);\n\n    if (itemElement && shouldBeRemoved) {\n      // do not use element.remove for ie11 support\n      itemElement.parentNode.removeChild(itemElement);\n    }\n  });\n\n};\n\nexport const shouldShowAreaLayoutMessage = (interactionAreasConfig) => {\n  const isLayoutEnabled = get(interactionAreasConfig, 'layout.enable', true);\n\n  return isLayoutEnabled && localStorage.getItem(INTERACTION_AREA_LAYOUT_LOCAL_STORAGE_NAME) !== 'true';\n};\n\n\nconst onClickInteractionAreaLayoutClick = (checked, onClick = noop) => {\n  localStorage.setItem(INTERACTION_AREA_LAYOUT_LOCAL_STORAGE_NAME, JSON.parse(checked));\n  onClick();\n};\n\nexport const createInteractionAreaLayoutMessage = (videojs, onClick, showItAgainCheckbox = false) => {\n\n  let checked = false;\n\n  const id = `checkbox_${Math.round(Math.random() * 10000)}`;\n\n  const tracksContainer = elementsCreator({\n    tag: 'div',\n    attr: { class: `${INTERACTION_AREAS_CONTAINER_CLASS_NAME} ${INTERACTION_AREAS_PREFIX}-layout-message ${showItAgainCheckbox ? '' : 'clickable'}` },\n    onClick: !showItAgainCheckbox ? () => onClickInteractionAreaLayoutClick(checked, onClick) : null,\n    children: [\n      {\n        tag: 'img',\n        attr: { class: `${INTERACTION_AREAS_PREFIX}-layout-icon`, src: INTERACTION_AREA_HAND_ICON }\n      },\n      {\n        tag: 'h3',\n        attr: { class: `${INTERACTION_AREAS_PREFIX}-layout-message-title` },\n        children: 'Tap on dots to zoom for a product.'\n      },\n      themedButton({\n        text: 'Got it',\n        theme: BUTTON_THEME.TRANSPARENT_WHITE,\n        loadingDelay: showItAgainCheckbox ? 0 : CLOSE_INTERACTION_AREA_LAYOUT_DELAY,\n        onClick: showItAgainCheckbox ? () => onClickInteractionAreaLayoutClick(checked, onClick) : null\n      }),\n      showItAgainCheckbox && {\n        tag: 'div',\n        attr: { class: `${INTERACTION_AREAS_PREFIX}-layout-message-do-not-show` },\n        children: [\n          {\n            tag: 'input',\n            attr: { type: 'checkbox', class: `${INTERACTION_AREAS_PREFIX}-layout-message-checkbox`, id },\n            event: {\n              name: 'input',\n              callback: (event) => {\n                checked = event.target.checked;\n              }\n            }\n          },\n          {\n            tag: 'label',\n            attr: { class: `${INTERACTION_AREAS_PREFIX}-layout-message-checkbox-title`, for: id },\n            children: 'Don׳t show it again'\n          }\n        ]\n      }\n    ].filter(i => i)\n  });\n\n  setInteractionAreasContainer(videojs, tracksContainer);\n};\n\nconst getInteractionAreasContainer = (videojs) => videojs.el().querySelector(`.${INTERACTION_AREAS_CONTAINER_CLASS_NAME}`);\n\nexport const removeInteractionAreasContainer = (videojs) => {\n  const interactionAreasContainer = getInteractionAreasContainer(videojs);\n\n  // do not use element.remove for ie11 support\n  interactionAreasContainer && interactionAreasContainer.parentNode.removeChild(interactionAreasContainer);\n};\n\nexport const setInteractionAreasContainerSize = (videojs, videoElement) => {\n\n  const interactionAreasContainer = getInteractionAreasContainer(videojs);\n\n  if (!interactionAreasContainer) {\n    return;\n  }\n\n  const { videoHeight, videoWidth } = videoElement;\n  const videoAspectRatio = videoWidth / videoHeight;\n\n  const width = videoAspectRatio * videoElement.clientHeight;\n\n  interactionAreasContainer.style.width = `${videoElement.clientWidth < width ? '100%' : width}px`;\n  interactionAreasContainer.style.height = videoElement.clientWidth < width ? `${videoElement.clientWidth / videoAspectRatio}px` : '100%';\n};\n","import videojs from 'video.js';\nimport {\n  CLOSE_INTERACTION_AREA_LAYOUT_DELAY,\n  DEFAULT_INTERACTION_ARE_TRANSITION,\n  INTERACTION_AREAS_CONTAINER_CLASS_NAME, TEMPLATE_INTERACTION_AREAS_VTT\n} from './interaction-areas.const';\nimport {\n  createInteractionAreaLayoutMessage,\n  getInteractionAreaItem,\n  getZoomTransformation,\n  removeInteractionAreasContainer,\n  setInteractionAreasContainer,\n  setInteractionAreasContainerSize,\n  shouldShowAreaLayoutMessage,\n  updateInteractionAreasItem\n} from './interaction-areas.utils';\nimport { addEventListener, createElement } from '../../utils/dom';\nimport { throttle } from '../../utils/throttle';\nimport { get } from '../../utils/object';\nimport { noop } from '../../utils/type-inference';\nimport { addMetadataTrack } from '../../video-player.utils';\nimport { PLAYER_EVENT } from '../../utils/consts';\n\nimport './interaction-areas.scss';\n\nexport const interactionAreasService = (player, playerOptions, videojsOptions) => {\n\n  let isZoomed = false;\n  let currentSource = null;\n  let currentTrack = null;\n  let unZoom = noop;\n\n  const shouldLayoutMessage = () => shouldShowAreaLayoutMessage(videojsOptions.interactionDisplay);\n\n  const getIsSyncOffsetTime = () => {\n    const interactionAreasConfig = getInteractionAreasConfig();\n    return (interactionAreasConfig && interactionAreasConfig.syncOffsetTime !== undefined) ? interactionAreasConfig.syncOffsetTime : false;\n  };\n\n  function isInteractionAreasEnabled(enabled = false) {\n    const interactionAreasConfig = getInteractionAreasConfig();\n    return enabled || (interactionAreasConfig && interactionAreasConfig.enable);\n  }\n\n  function setAreasPositionListener() {\n    currentTrack && player.videojs.removeRemoteTextTrack(currentTrack);\n\n    const isEnabled = isInteractionAreasEnabled();\n    const interactionAreasConfig = getInteractionAreasConfig();\n\n    if (!isEnabled || isZoomed) {\n      return null;\n    }\n\n    if (Array.isArray(interactionAreasConfig.template)) {\n      addInteractionAreasItems(interactionAreasConfig.template);\n      setContainerSize();\n    } else {\n      const vttUrl = interactionAreasConfig.vttUrl || TEMPLATE_INTERACTION_AREAS_VTT[interactionAreasConfig.template];\n\n      if (vttUrl) {\n        currentTrack = addMetadataTrack(player.videojs, vttUrl);\n        addCueListener(currentTrack);\n      }\n    }\n  }\n\n  function setGoBackButton() {\n    const button = createElement('div', { 'class': 'go-back-button' });\n\n    button.addEventListener('click', () => {\n      unZoom();\n    }, false);\n\n    const tracksContainer = createElement('div', { 'class': INTERACTION_AREAS_CONTAINER_CLASS_NAME }, button);\n    setInteractionAreasContainer(player.videojs, tracksContainer);\n  }\n\n  function getInteractionAreasConfig() {\n    const { cldSrc } = currentSource;\n    return cldSrc && cldSrc.getInteractionAreas();\n  }\n\n  function removeLayoutMessage() {\n    removeInteractionAreasContainer(player.videojs);\n    setAreasPositionListener();\n    player.play();\n  }\n\n  function setLayoutMessage() {\n    if (!isInteractionAreasEnabled()) {\n      return;\n    }\n\n    if (shouldLayoutMessage()) {\n      let layoutMessageTimout = null;\n      const showItAgainCheckbox = get(videojsOptions, 'interactionDisplay.layout.showAgain', false);\n      player.pause();\n\n      createInteractionAreaLayoutMessage(player.videojs, () => {\n        clearTimeout(layoutMessageTimout);\n        removeLayoutMessage();\n      }, showItAgainCheckbox);\n\n      if (!showItAgainCheckbox) {\n        layoutMessageTimout = setTimeout(removeLayoutMessage, CLOSE_INTERACTION_AREA_LAYOUT_DELAY);\n      }\n    } else {\n      removeLayoutMessage();\n    }\n  }\n\n  function handleAds() {\n    player.on('adsready', () => {\n      player.videojs.ima.addEventListener(window.google.ima.AdEvent.Type.ALL_ADS_COMPLETED, setLayoutMessage);\n    });\n  }\n\n  function init() {\n    currentSource = currentSource || player.videojs.currentSource();\n\n    if (isInteractionAreasEnabled()) {\n\n      player.videojs.el().classList.add('interaction-areas');\n\n      player.videojs.one(PLAYER_EVENT.PLAY, () => {\n        if (typeof player.videojs.ima === 'object') {\n          handleAds();\n        } else {\n          setLayoutMessage();\n        }\n      });\n\n      const setInteractionAreasContainerSize = throttle(setContainerSize, 100);\n\n      player.videojs.on(PLAYER_EVENT.FULL_SCREEN_CHANGE, () => {\n        // waiting for fullscreen will end\n        setTimeout(setInteractionAreasContainerSize, 100);\n      });\n\n      const resizeDestroy = addEventListener(window, 'resize', setContainerSize, false);\n\n      player.videojs.on(PLAYER_EVENT.DISPOSE, resizeDestroy);\n    }\n\n    player.videojs.on(PLAYER_EVENT.ENDED, () => {\n      unZoom();\n    });\n\n    player.videojs.on(PLAYER_EVENT.ERROR, () => {\n      player.pause();\n    });\n  }\n\n  function onZoom(src, newOption, item) {\n    const originalCurrentTime = player.currentTime();\n    const isSyncOffsetTime = getIsSyncOffsetTime();\n    const { cldSrc } = currentSource;\n    const currentSrcOptions = cldSrc.getInitOptions();\n    const option = newOption || { transformation: currentSrcOptions.transformation };\n    const transformation = !src && getZoomTransformation(player.videoElement, item);\n    const sourceOptions = transformation ? videojs.obj.merge({ transformation }, option) : option;\n\n    const newSource = cldSrc.isRawUrl ? currentSource.src : { publicId: cldSrc.publicId() };\n    player.source(transformation ? { publicId: cldSrc.publicId() } : src, sourceOptions).play();\n    isSyncOffsetTime && player.currentTime(originalCurrentTime);\n\n    isZoomed = true;\n\n    setGoBackButton();\n\n    unZoom = () => {\n      if (isZoomed) {\n        isZoomed = false;\n        const currentZoomedTime = player.currentTime();\n        const duration = player.duration();\n        player.source(newSource, currentSrcOptions).play();\n        isSyncOffsetTime && currentZoomedTime < duration && player.currentTime(currentZoomedTime);\n        setAreasPositionListener();\n      }\n    };\n  }\n\n  function onInteractionAreasClick({ event, item, index }) {\n    const interactionAreasConfig = getInteractionAreasConfig();\n\n    interactionAreasConfig.onClick && interactionAreasConfig.onClick({\n      item,\n      index,\n      event,\n      zoom: (source, option) => {\n        onZoom(source, option, item);\n      }\n    });\n  }\n\n  function addInteractionAreasItems(interactionAreasData, previousInteractionAreasData, durationTime = 0) {\n    const configs = { playerOptions: playerOptions, videojsOptions: videojsOptions };\n\n    if (previousInteractionAreasData) {\n      updateInteractionAreasItem(player.videojs, configs, interactionAreasData, previousInteractionAreasData, durationTime, onInteractionAreasClick);\n    } else {\n      const interactionAreasItems = interactionAreasData.map((item, index) => {\n        return getInteractionAreaItem(configs, item, index, durationTime, (event) => {\n          onInteractionAreasClick({ event, item, index });\n        });\n      });\n\n      setInteractionAreasContainer(player.videojs, createElement('div', { 'class': INTERACTION_AREAS_CONTAINER_CLASS_NAME }, interactionAreasItems));\n    }\n  }\n\n  function setContainerSize() {\n    if (isInteractionAreasEnabled()) {\n      setInteractionAreasContainerSize(player.videojs, player.videoElement);\n    }\n  }\n\n  function addCueListener(track) {\n    if (!track) {\n      return;\n    }\n\n    let previousTracksData = null;\n\n    track.addEventListener('cuechange', () => {\n      const activeCue = track.activeCues && track.activeCues[0];\n\n      if (activeCue) {\n        const durationTime = Math.max(Math.floor((activeCue.endTime - activeCue.startTime) * 1000), DEFAULT_INTERACTION_ARE_TRANSITION);\n\n        const tracksData = JSON.parse(activeCue.text);\n\n        addInteractionAreasItems(tracksData, previousTracksData, durationTime);\n        !previousTracksData && setContainerSize();\n        previousTracksData = tracksData;\n      } else {\n        removeInteractionAreasContainer(player.videojs);\n        previousTracksData = null;\n      }\n    });\n  }\n\n  init();\n};\n","/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nfunction throttle(fn, wait) {\n  let last = window.performance.now();\n\n  const throttled = function(...args) {\n    const now = window.performance.now();\n\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n\n  return throttled;\n}\n\nexport { throttle };\n"],"names":["themedButton","_ref","text","onClick","theme","loadingDelay","elementsCreator","tag","attr","class","children","style","BUTTON_THEME","getInteractionAreaItemId","item","index","id","type","getInteractionAreaItem","durationTime","playerOptions","videojsOptions","defaultColor","getDefaultPlayerColor","accentColor","colors","accent","get","INTERACTION_AREAS_THEME","PULSING","INTERACTION_AREAS_PREFIX","left","top","width","height","transitionDuration","event","name","callback","SHADOWED","borderColor","percentageToFixedValue","outOf","value","setInteractionAreasContainer","videojs","newInteractionAreasContainer","currentInteractionAreasContainer","getInteractionAreasContainer","replaceWith","el","appendChild","getInteractionAreaElementById","interactionAreasContainer","querySelector","onClickInteractionAreaLayoutClick","checked","arguments","length","undefined","noop","localStorage","setItem","INTERACTION_AREA_LAYOUT_LOCAL_STORAGE_NAME","JSON","parse","INTERACTION_AREAS_CONTAINER_CLASS_NAME","removeInteractionAreasContainer","parentNode","removeChild","interactionAreasService","player","isZoomed","currentSource","currentTrack","unZoom","shouldLayoutMessage","shouldShowAreaLayoutMessage","interactionAreasConfig","interactionDisplay","getItem","getIsSyncOffsetTime","getInteractionAreasConfig","syncOffsetTime","isInteractionAreasEnabled","enabled","enable","setAreasPositionListener","removeRemoteTextTrack","isEnabled","Array","isArray","template","addInteractionAreasItems","setContainerSize","vttUrl","TEMPLATE_INTERACTION_AREAS_VTT","addMetadataTrack","track","previousTracksData","addEventListener","activeCue","activeCues","Math","max","floor","endTime","startTime","DEFAULT_INTERACTION_ARE_TRANSITION","tracksData","addCueListener","cldSrc","getInteractionAreas","removeLayoutMessage","play","setLayoutMessage","layoutMessageTimout","showItAgainCheckbox","pause","round","random","tracksContainer","src","INTERACTION_AREA_HAND_ICON","CLOSE_INTERACTION_AREA_LAYOUT_DELAY","target","for","filter","i","createInteractionAreaLayoutMessage","clearTimeout","setTimeout","onZoom","newOption","originalCurrentTime","currentTime","isSyncOffsetTime","currentSrcOptions","getInitOptions","option","transformation","getZoomTransformation","videoElement","interactionAreaItem","videoHeight","videoWidth","itemX","itemY","itemWidth","itemHeight","videoAspectRatio","itemAspectRatio","x","y","min","crop","sourceOptions","merge","newSource","isRawUrl","publicId","source","button","createElement","setGoBackButton","currentZoomedTime","duration","onInteractionAreasClick","zoom","interactionAreasData","previousInteractionAreasData","configs","updateInteractionAreasItem","forEach","itemElement","itemId","isExistItem","some","styleElement","shouldBeRemoved","interactionAreasItems","map","setInteractionAreasContainerSize","clientHeight","clientWidth","classList","add","one","PLAYER_EVENT","PLAY","ima","on","window","google","AdEvent","Type","ALL_ADS_COMPLETED","throttle","FULL_SCREEN_CHANGE","resizeDestroy","DISPOSE","ENDED","ERROR","init","fn","wait","last","performance","now"],"sourceRoot":""}